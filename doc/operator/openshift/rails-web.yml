---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: rails
    promotion-enabled: "true"
    redeployment-enabled: "true"
    redeployment-lifecycle: around-database
    redeployment-stop: "true"
  name: rails
spec:
  replicas: 1
  selector:
    app: rails
  strategy:
    recreateParams:
      mid:
        execNewPod:
          command:
          - /usr/bin/bash
          - -c
          - /usr/libexec/s2i/deploy
          containerName: rails
        failurePolicy: Abort
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    type: Recreate
  template:
    metadata:
      labels:
        app: rails
        promotion-enabled: "true"
        redeployment-enabled: "true"
        redeployment-lifecycle: around-database
        redeployment-stop: "true"
    spec:
      containers:
      - env:
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              key: key
              name: rails-secret-key-base
        - name: TZ
          value: Europe/Berlin
        - name: RAILS_ENV
          value: production
        - name: RAILS_DB_NAME
          value: database
        - name: RAILS_DB_HOST
          value: mysql
        - name: RAILS_DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: user
              name: database-credentials
        - name: RAILS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: database-credentials
        - name: RAILS_DB_ADAPTER
          value: mysql2
        - name: RAILS_HOST_NAME
          value: your-public-hostname.example.com
        - name: RAILS_AIRBRAKE_HOST
          value: errbit.example.com
        - name: RAILS_AIRBRAKE_API_KEY
          valueFrom:
            secretKeyRef:
              key: key
              name: errbit-credentials
        - name: RAILS_SPHINX_HOST
          value: sphinx
        - name: RAILS_SPHINX_PORT
          value: "9312"
        - name: MEMCACHE_SERVERS
          value: memcached
        - name: PASSENGER_START_TIMEOUT
          value: "120"
        - name: RAILS_MAIL_RETRIEVER_CONFIG
          valueFrom:
            secretKeyRef:
              key: config
              name: rails-mail-retriever-config
        - name: RAILS_MAIL_DELIVERY_CONFIG
          valueFrom:
            secretKeyRef:
              key: config
              name: rails-mail-delivery-config
        image: 172.30.1.1:5000/hitobito-templaterails:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 300
          timeoutSeconds: 30
        name: rails
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          initialDelaySeconds: 15
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - mountPath: /opt/app-root/src/public/uploads
          name: useruploads
      restartPolicy: Always
      volumes:
      - name: useruploads
        persistentVolumeClaim:
          claimName: useruploads
  triggers: []
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    openshift.io/generated-by: Puzzle ITC
  labels:
    app: rails
  name: rails
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: rails
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

