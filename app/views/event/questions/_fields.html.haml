-# Copyright (c) 2012-2019, Jungwacht Blauring Schweiz. This file is part of
-# hitobito and licensed under the Affero General Public License version 3
-# or later. See the COPYING file at the top-level directory or at
-# https://github.com/hitobito/hitobito.

= f.hidden_field(:type)
= f.hidden_field(:derived_from_question_id)

- # lookup if a partial for the question type and render it if it exists. 
- # `lookup_context.find_all` needs the partial including the leading underscore,
- # while `render` requires you to pass the partial name without it.
- partial_path = "event/questions/#{f.object.model_name.singular}"
- if lookup_context.find_all(File.join(partial_path, '_fields')).any?
  = render partial: File.join(partial_path, 'fields'), locals: { f: f }

= f.labeled(:disclosure) do
  - Event::Question::DISCLOSURE_VALUES.each do |key|
    = f.inline_radio_button(:disclosure, key, f.object.disclosure_label(key))

= render_extensions :fields, locals: { f: f }

- unless f.object.derived?
  .controls.align-with-form= f.link_to_remove(ta(:remove))

.controls.fields-separation
  %hr
