{
  "ignored_warnings": [
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "4000ff73f6b8ea02cc258bc13979b5f086367affcae15ec82e7fd38d32825bac",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/devise/sessions/_info.html.haml",
      "line": 3,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "CustomContent.get(\"views/devise/sessions/info\").body.to_s",
      "render_path": [
        {
          "type": "template",
          "name": "devise/sessions/new",
          "line": 11,
          "file": "app/views/devise/sessions/new.html.haml",
          "rendered": {
            "name": "devise/sessions/_info",
            "file": "app/views/devise/sessions/_info.html.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "devise/sessions/_info"
      },
      "user_input": null,
      "confidence": "Medium",
      "cwe_id": [
        79
      ],
      "note": "HTML Tags ARE allowed here"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "64e5a99d16c09a728727fa367b1bf78226fc636ce622393da9a0e2b8e13d176c",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/qualification.rb",
      "line": 105,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"qualifications.finish_at <= :date AND NOT EXISTS (#{\"SELECT 1 FROM qualifications q2\\nINNER JOIN qualification_kinds qk ON qk.id = q2.qualification_kind_id\\nWHERE q2.person_id = qualifications.person_id\\nAND #{subselect_kind_condition(qualification_kind_ids)}\\nAND (\\n  (q2.start_at <= :date AND (q2.finish_at IS NULL OR q2.finish_at >= :date)) OR\\n  (q2.finish_at < :date AND DATE_ADD(q2.finish_at, INTERVAL qk.reactivateable YEAR) >= :date)\\n)\\n\"})\", :date => Time.zone.today, :qualification_kind_ids => qualification_kind_ids)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Qualification",
        "method": "s(:self).only_expired"
      },
      "user_input": "subselect_kind_condition(qualification_kind_ids)",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": "The parameter is a return value from a method and will always be one of two fixed strings"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "944ff4646935452c5987fd8b7a464d512229fadf57160da6a4fc414f1935d4c3",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/qualification.rb",
      "line": 87,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"NOT EXISTS (SELECT 1 FROM qualifications q2 WHERE q2.person_id = qualifications.person_id AND #{subselect_kind_condition(qualification_kind_ids)} AND q2.start_at <= :date AND (q2.finish_at IS NULL OR q2.finish_at >= :date))\", :qualification_kind_ids => qualification_kind_ids, :date => Time.zone.today)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Qualification",
        "method": "s(:self).not_active"
      },
      "user_input": "subselect_kind_condition(qualification_kind_ids)",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": "The parameter is a return value from a method and will always be one of two fixed strings"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b216097a885c4749beec71b32c00a8da56ce498c519675a10a03a28b3eaf73a0",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/domain/mail_relay/lists.rb",
      "line": 120,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "from(\"#{envelope_receiver_name}#{\"-bounces\"}@#{mail_domain}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "MailRelay::Lists",
        "method": "prepare_not_allowed_message"
      },
      "user_input": "envelope_receiver_name",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": "This from() is not part of an SQL query builder, but rather an email builder"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "c7638f7f989e638581d685a8efd5d137143e3f9e15484367625fc86d43b77167",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/domain/person/filter/qualification.rb",
      "line": 88,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "scope.joins(\"LEFT OUTER JOIN qualifications ON qualifications.person_id = people.id\\nAND qualifications.qualification_kind_id IN (#{args[:qualification_kind_ids].map(&:to_i).join(\",\")})\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Person::Filter::Qualification",
        "method": "no_qualification_scope"
      },
      "user_input": "args[:qualification_kind_ids].map(&:to_i).join(\",\")",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": "All input values are ensured to be integer and thus not dangerous"
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "f90d2e106bfa368dc7c0cf2a99ad0c1597b1cce0ddd9301c4c46259e0e60edec",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/domain/release_version.rb",
      "line": 68,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`#{cmd}`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ReleaseVersion",
        "method": "run"
      },
      "user_input": "cmd",
      "confidence": "Medium",
      "cwe_id": [
        77
      ],
      "note": "The command can only be executed in an authenticated context or locally, some parameters are checked against a whitelist"
    }
  ],
  "updated": "2024-08-21 11:05:30 +0200",
  "brakeman_version": "6.1.2"
}
